#!/bin/bash

# Valhalla Test Script
# This script automates the testing of the Valhalla multi-agent system

# Color definitions for prettier output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${BLUE}┌─────────────────────────────────────────┐${NC}"
echo -e "${BLUE}│         VALHALLA TEST SCRIPT            │${NC}"
echo -e "${BLUE}└─────────────────────────────────────────┘${NC}"
echo

# Configuration
HEARTBEAT_INTERVAL=${HEARTBEAT_INTERVAL:-10000}
RELAY_SERVER_URL=${RELAY_SERVER_URL:-"http://207.180.245.243:4000"}
TELEGRAM_GROUP_ID=${TELEGRAM_GROUP_ID:-"-1002550618173"}
AGENT1="eth_memelord_9000"
AGENT2="linda_evangelista_88"
LOG_DIR="/root/eliza/logs"

# Clean start
echo -e "${YELLOW}[1] Stopping any running agents and relay...${NC}"
./stop_agents.sh all > /dev/null 2>&1
if [ -f ./relay-server/stop-relay.sh ]; then
  cd ./relay-server && ./stop-relay.sh > /dev/null 2>&1
  cd ..
fi
sleep 2

# Start relay server
echo -e "${YELLOW}[2] Starting relay server...${NC}"
cd ./relay-server
./start-relay.sh > ../logs/relay-server.log 2>&1 &
RELAY_PID=$!
cd ..
echo -e "   ${GREEN}Relay server started with PID: ${RELAY_PID}${NC}"

# Wait for relay to start
echo -e "   ${BLUE}Waiting for relay server to initialize...${NC}"
sleep 5

# Verify relay is running
echo -e "${YELLOW}[3] Verifying relay server...${NC}"
RELAY_HEALTH=$(curl -s $RELAY_SERVER_URL/health)
if [[ $RELAY_HEALTH == *"status"*"ok"* ]]; then
  echo -e "   ${GREEN}Relay server is running correctly${NC}"
else
  echo -e "   ${RED}Relay server is not responding properly${NC}"
  echo "Relay health response: $RELAY_HEALTH"
  echo -e "   ${RED}Aborting test${NC}"
  exit 1
fi

# Start the test agents
echo -e "${YELLOW}[4] Starting test agents: $AGENT1 and $AGENT2...${NC}"
export HEARTBEAT_INTERVAL=$HEARTBEAT_INTERVAL
./start_agents.sh $AGENT1 $AGENT2

# Wait for agents to initialize
echo -e "   ${BLUE}Waiting for agents to initialize and register...${NC}"
sleep 15

# Verify agents are registered
echo -e "${YELLOW}[5] Verifying agent registration...${NC}"
RELAY_HEALTH=$(curl -s $RELAY_SERVER_URL/health)
AGENTS_COUNT=$(echo $RELAY_HEALTH | grep -o '"agents":[0-9]*' | cut -d':' -f2)
AGENTS_LIST=$(echo $RELAY_HEALTH | grep -o '"agents_list":[^}]*' | cut -d':' -f2 | tr -d '[]"')

echo -e "   ${BLUE}Agents registered: $AGENTS_COUNT${NC}"
echo -e "   ${BLUE}Agents list: $AGENTS_LIST${NC}"

if [[ "$AGENTS_LIST" == *"$AGENT1"* && "$AGENTS_LIST" == *"$AGENT2"* ]]; then
  echo -e "   ${GREEN}Both test agents are registered successfully${NC}"
else
  echo -e "   ${RED}Not all test agents are registered${NC}"
  echo -e "   ${YELLOW}Continuing with test anyway...${NC}"
fi

# Send test message
echo -e "${YELLOW}[6] Sending test message from $AGENT1 to $AGENT2...${NC}"
./test_message.sh --sender "${AGENT1}_bot" --receiver "${AGENT2}_bot" --message "What do you think about ETH today?" > /dev/null

# Wait for response
echo -e "   ${BLUE}Waiting for response...${NC}"
sleep 10

# Show logs
echo -e "${YELLOW}[7] Checking logs for message processing...${NC}"
echo -e "${BLUE}Last 20 lines from $AGENT2 log:${NC}"
echo "---------------------------------------------------------"
tail -n 20 "$LOG_DIR/${AGENT2}.log"
echo "---------------------------------------------------------"

# Check for response indicators in logs
if grep -q "\[PLUGIN\] runtime.handleMessage was called" "$LOG_DIR/${AGENT2}.log"; then
  echo -e "   ${GREEN}✓ Runtime handleMessage was called${NC}"
else
  echo -e "   ${RED}✗ Runtime handleMessage was not called${NC}"
fi

if grep -q "\[PLUGIN\] Got response from runtime" "$LOG_DIR/${AGENT2}.log"; then
  echo -e "   ${GREEN}✓ Response was generated by runtime${NC}"
else
  echo -e "   ${RED}✗ No response was generated by runtime${NC}"
fi

if grep -q "\[PLUGIN\] Forcing relay send of content" "$LOG_DIR/${AGENT2}.log"; then
  echo -e "   ${GREEN}✓ Response was sent to Telegram${NC}"
else
  echo -e "   ${RED}✗ Response was not sent to Telegram${NC}"
fi

# Final check - verify relay is still healthy
echo -e "${YELLOW}[8] Final verification of relay health...${NC}"
RELAY_HEALTH=$(curl -s $RELAY_SERVER_URL/health)
AGENTS_COUNT=$(echo $RELAY_HEALTH | grep -o '"agents":[0-9]*' | cut -d':' -f2)

echo -e "   ${BLUE}Agents still registered: $AGENTS_COUNT${NC}"

if [ "$AGENTS_COUNT" -ge 2 ]; then
  echo -e "   ${GREEN}Relay health check passed${NC}"
else
  echo -e "   ${RED}Relay has lost agent registrations${NC}"
fi

echo
echo -e "${BLUE}┌─────────────────────────────────────────┐${NC}"
echo -e "${BLUE}│    VALHALLA TEST COMPLETED              │${NC}"
echo -e "${BLUE}└─────────────────────────────────────────┘${NC}"
echo
echo -e "${YELLOW}Next steps:${NC}"
echo -e "1. Check ${LOG_DIR}/${AGENT2}.log for detailed message processing"
echo -e "2. Check Telegram group $TELEGRAM_GROUP_ID for actual messages"
echo -e "3. Run './verifyFixes.sh $AGENT1' for detailed diagnostics"

# Don't automatically stop agents, let user decide
echo
echo -e "${BLUE}Agents are still running. To stop them:${NC}"
echo -e "  ./stop_agents.sh all" 